

- name: Create /etc/nginx/certs/ Directory
  ansible.builtin.file:
    path: /etc/nginx/certs/
    state: directory


- name: Create /admin_tools/certs Directory
  ansible.builtin.file:
    path: /admin_tools/certs
    state: directory




- name: Copy Self Generate SSL Cert To /etc/nginx/certs directory
  ansible.builtin.shell: "cp -r /etc/letsencrypt/archive/{{ ansible_nodename }}/cert1.pem /etc/nginx/certs/server.crt"
  args:
    executable: /bin/bash


- name: Copy Self Generate SSL Private Key To /etc/nginx/certs directory
  ansible.builtin.shell: "cp -r /etc/letsencrypt/archive/{{ ansible_nodename }}/privkey1.pem /etc/nginx/certs/server.key"
  args:
    executable: /bin/bash




############################




- name: Get EDA service NodePort
  ansible.builtin.shell: "kubectl get service eda-ui -n eda -o jsonpath='{.spec.ports[0].nodePort}'"
  args:
    executable: /bin/bash
  register: eda_service_output

- name: Print extracted service port
  ansible.builtin.debug:
     msg: "Extracted service port is {{ eda_service_output.stdout }}"


- name: Set eda_service_port variable
  set_fact:
    eda_service_port: "{{ eda_service_output.stdout }}"




- name: Copy Over Custom Nginx config_files to /etc/nginx/conf.d/eda-ssl.conf
  ansible.builtin.template:
    src: "{{ role_path }}/files/eda-ssl.conf"
    dest: "/etc/nginx/conf.d/eda-ssl.conf"


- name: Copy Over Custom Nginx config_files to /etc/nginx/conf.d/eda-no-ssl.conf
  ansible.builtin.copy:
    src: "{{ role_path }}/files/eda-no-ssl.conf"
    dest: "/etc/nginx/conf.d/eda-no-ssl.conf"


- name: Set Nginx SELinux Rule
  ansible.builtin.shell: "setsebool -P httpd_can_network_connect 1"
  args:
    executable: /bin/bash




- name: Restart Nginx
  service:
    name: nginx
    state: restarted





  



