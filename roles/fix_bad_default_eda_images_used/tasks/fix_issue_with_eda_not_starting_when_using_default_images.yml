---



- name: Create k3s Symbolic Link
  ansible.builtin.file: 
    src: "/usr/local/bin/k3s"
    dest: '/usr/bin/k3s'
    state: link
    

- name: Create ctr Symbolic Link
  ansible.builtin.file: 
    src: "/usr/local/bin/ctr"
    dest: '/usr/bin/ctr'
    state: link


- name: Create the /admin_tools/eda_awx_install_config/quay_io_repo_images Directory if it is not present
  ansible.builtin.file:
    path: "/admin_tools/eda_awx_install_config/quay_io_repo_images"
    state: directory
    mode: '0755'
    recurse: yes



- name: Pull the quay.io eda Images That Are Working
  ansible.builtin.shell: "podman pull quay.io/philip860/{{ item }}"
  args:
    chdir: /admin_tools/eda_awx_install_config/quay_io_repo_images
    executable: /bin/bash
  loop:
    - eda-server-operator:main
    - eda-server:main
    - eda-ui:main
    - postgresql-15-c9s:latest
    - redis-6-c9s:c9s



- name: Get list of Podman images
  command: podman images --format "{{'{{.ID}}'}} {{'{{.Repository}}:{{.Tag}}'}}"
  register: podman_images
  changed_when: false

- name: Define expected image mappings
  set_fact:
    expected_images:
      quay.io/philip860/eda-ui:main: "quay.io/ansible/eda-ui:main"
      quay.io/philip860/eda-server:main: "quay.io/ansible/eda-server:main"
      quay.io/philip860/postgresql-15-c9s:latest: "quay.io/sclorg/postgresql-15-c9s:latest"
      quay.io/philip860/eda-server-operator:main: "quay.io/ansible/eda-server-operator:main"
      quay.io/philip860/redis-6-c9s:c9s: "quay.io/sclorg/redis-6-c9s:c9s"

- name: Extract image IDs for the expected quay.io images
  set_fact:
    image_id_map: "{{ image_id_map | default({}) | combine({item.split(' ')[1]: item.split(' ')[0]}) }}"
  loop: "{{ podman_images.stdout_lines }}"
  when: item.split(' ')[1] in expected_images.keys()

- name: Create final mapping for tagging
  set_fact:
    tag_mappings: "{{ tag_mappings | default([]) + [{'id': image_id_map[item], 'new_repo': expected_images[item]}] }}"
  loop: "{{ expected_images.keys() }}"
  when: item in image_id_map

  
- name: Run podman tag with dynamically mapped IDs
  command: podman tag {{ item.id }} {{ item.new_repo }}
  loop: "{{ tag_mappings }}"



- name: Save the newly tagged quay.io eda Images In quay_io_repo_images Directory
  ansible.builtin.shell: "{{ item }}"
  args:
    chdir: /admin_tools/eda_awx_install_config/quay_io_repo_images
    executable: /bin/bash
  loop:
    - podman save -o eda-server-operator.tar quay.io/ansible/eda-server-operator:main
    - podman save -o eda-server.tar quay.io/ansible/eda-server:main
    - podman save -o eda-ui.tar quay.io/ansible/eda-ui:main
    - podman save -o postgresql-15.tar quay.io/sclorg/postgresql-15-c9s:latest
    - podman save -o redis-6.tar quay.io/sclorg/redis-6-c9s:c9s



- name: Transfter Saved Podman Images To K3s
  ansible.builtin.shell: "ctr -n k8s.io images import {{ item }}"
  args: 
    chdir: /admin_tools/eda_awx_install_config/quay_io_repo_images
    executable: /bin/bash
  loop:
    - eda-server-operator.tar
    - eda-server.tar
    - eda-ui.tar
    - postgresql-15.tar
    - redis-6.tar


- name: Delete ALL the current EDA Pods to force the deployment to use the Newly Updated Images
  ansible.builtin.shell: "kubectl delete pods --all -n eda"
  args:
    executable: /bin/bash